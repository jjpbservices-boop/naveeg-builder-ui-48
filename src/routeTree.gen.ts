/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SiteSiteIdOverviewRouteImport } from './routes/_site.$siteId/overview'
import { Route as SiteSiteIdDomainsRouteImport } from './routes/_site.$siteId/domains'
import { Route as SiteSiteIdAnalyticsRouteImport } from './routes/_site.$siteId/analytics'

const SiteSiteIdOverviewRoute = SiteSiteIdOverviewRouteImport.update({
  id: '/_site/$siteId/overview',
  path: '/$siteId/overview',
  getParentRoute: () => rootRouteImport,
} as any)
const SiteSiteIdDomainsRoute = SiteSiteIdDomainsRouteImport.update({
  id: '/_site/$siteId/domains',
  path: '/$siteId/domains',
  getParentRoute: () => rootRouteImport,
} as any)
const SiteSiteIdAnalyticsRoute = SiteSiteIdAnalyticsRouteImport.update({
  id: '/_site/$siteId/analytics',
  path: '/$siteId/analytics',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/$siteId/analytics': typeof SiteSiteIdAnalyticsRoute
  '/$siteId/domains': typeof SiteSiteIdDomainsRoute
  '/$siteId/overview': typeof SiteSiteIdOverviewRoute
}
export interface FileRoutesByTo {
  '/$siteId/analytics': typeof SiteSiteIdAnalyticsRoute
  '/$siteId/domains': typeof SiteSiteIdDomainsRoute
  '/$siteId/overview': typeof SiteSiteIdOverviewRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_site/$siteId/analytics': typeof SiteSiteIdAnalyticsRoute
  '/_site/$siteId/domains': typeof SiteSiteIdDomainsRoute
  '/_site/$siteId/overview': typeof SiteSiteIdOverviewRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$siteId/analytics' | '/$siteId/domains' | '/$siteId/overview'
  fileRoutesByTo: FileRoutesByTo
  to: '/$siteId/analytics' | '/$siteId/domains' | '/$siteId/overview'
  id:
    | '__root__'
    | '/_site/$siteId/analytics'
    | '/_site/$siteId/domains'
    | '/_site/$siteId/overview'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SiteSiteIdAnalyticsRoute: typeof SiteSiteIdAnalyticsRoute
  SiteSiteIdDomainsRoute: typeof SiteSiteIdDomainsRoute
  SiteSiteIdOverviewRoute: typeof SiteSiteIdOverviewRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_site/$siteId/overview': {
      id: '/_site/$siteId/overview'
      path: '/$siteId/overview'
      fullPath: '/$siteId/overview'
      preLoaderRoute: typeof SiteSiteIdOverviewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_site/$siteId/domains': {
      id: '/_site/$siteId/domains'
      path: '/$siteId/domains'
      fullPath: '/$siteId/domains'
      preLoaderRoute: typeof SiteSiteIdDomainsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_site/$siteId/analytics': {
      id: '/_site/$siteId/analytics'
      path: '/$siteId/analytics'
      fullPath: '/$siteId/analytics'
      preLoaderRoute: typeof SiteSiteIdAnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  SiteSiteIdAnalyticsRoute: SiteSiteIdAnalyticsRoute,
  SiteSiteIdDomainsRoute: SiteSiteIdDomainsRoute,
  SiteSiteIdOverviewRoute: SiteSiteIdOverviewRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
